The ''2-matrix_divided'' module

using ''matrix divided''

import module:
	>>>matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal matrix:
	>>>matrix_divided([[2, 4, 6], [1, 2, 3], 2)
	[[1.0, 2.0, 3.0], [0.5, 1.0, 1.5]]
Test one element:
	>>>matrix_divided([[4]], 2)
	[[2.0]]
Test unmodified matrix:
	>>>x = [[2, 4, 6], [1, 2, 3]]
	>>>matrix_divided(m, 2)
	[[1.0, 2.0, 3.0], [0.5, 1.0, 1.5]]
	>>>m[1][1]
	2
Test division by negative:
	>>>matrix_divided([[2, 4, 6], [1, 2, 3], -2)
	[[-1.0, -2.0, -3.0], [-0.5, -1.0, -1.5]]
Test division by inf:
	>>>matrix_divided([[2, 4, 6], [1, 2, 3], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
Test division ny nan:
	>>>matrix_divided([[2, 4, 6], [1, 2, 3], float('nan'))
	[nan, nan, nan], [nan, nan, nan]
Test division by zero:
	>>>matrix_divided([[2, 4, 6], [1, 2, 3], 0)
	Traceback (most recent call last)
	...
	ZeroDivisionError: division by zero
Test first arg is none:
	>>>matrix_divided(none, 1)
	Traceback (most recent call last):
	...
	NameError: name 'none' is not defined
Test empty matrix:
	>>>matrix_divided([], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
Test matrix with different rows:
	>>>matrix_divided([], [], [], 10)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
Test first arg is string:
	>>>matrix_divided('foo' 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
Test first arg is empty list:
	>>>matrix_divided([], 1)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
Test missing one arg:
	>>>matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
